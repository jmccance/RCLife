#!/usr/bin/env ruby
require 'curses'

def init_screen
  Curses.noecho
  Curses.init_screen
  Curses.stdscr.keypad(true)
  Curses.timeout = 0
  Curses.curs_set(3)

  begin
    yield
  ensure
    Curses.close_screen
  end
end

class Cursor
  
  def initialize(y, x)
    @x = x
    @y = y
  end

  def draw
    Curses.setpos(@y, @x)
    Curses.addch('@')
    Curses.setpos(0, 0)
  end

  def move_left
    @x -= 1 unless @x == 0
  end

  def move_right
    @x += 1 unless @x + 1 >= Curses.cols
  end

  def move_up
    @y -= 1 unless @y == 0
  end

  def move_down
    @y += 1 unless @y + 1 >= Curses.lines
  end

end

class ScreenFiller

  attr_accessor :fillch

  def initialize(fillch)
    @fillch = fillch
  end

  def fill
    if @fillch == ?/
      @fillch == ?\
    elsif @fillch == ?\ 
      @fillch == ?/
    end

    Curses.lines.times do |y|
      Curses.cols.times do |x|
        Curses.setpos(y, x)
        Curses.addch(self.fillch)
      end
    end
  end

end

cursor = Cursor.new(0, 0)
filler = ScreenFiller.new(?/)

def fill_screen
  
end

init_screen do
  loop do
    Curses.clear
    filler.fill
    cursor.draw
    Curses.refresh
    sleep(1.0)

    ch = Curses.getch
    case ch
    # when Curses::Key::LEFT then cursor.move_left
    # when Curses::Key::RIGHT then cursor.move_right
    # when Curses::Key::UP then cursor.move_up
    # when Curses::Key::DOWN then cursor.move_down
    when ?q then break
    # when ?/ then filler.fillch = ?/
    end
  end
end
